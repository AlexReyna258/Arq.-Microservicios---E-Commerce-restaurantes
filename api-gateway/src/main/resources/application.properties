spring.application.name=api-gateway
server.port=8080
spring.cloud.gateway.discovery.locator.enabled=true

eureka.instance.instance-id=${spring.application.name}:${random.uuid}

spring.cloud.loadbalancer.ribbon.enabled=false

spring.cloud.gateway.routes[0].id=product-microservice
spring.cloud.gateway.routes[0].uri=lb://PRODUCT-MICROSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product/**

spring.cloud.gateway.routes[1].id=client-microservice
spring.cloud.gateway.routes[1].uri=lb://CLIENT-MICROSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/client/**

spring.cloud.gateway.routes[2].id=booking-microservice
spring.cloud.gateway.routes[2].uri=lb://BOOKING-MICROSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/booking/**

spring.cloud.gateway.routes[3].id=restaurant-microservice
spring.cloud.gateway.routes[3].uri=lb://RESTAURANT-MICROSERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/restaurant/**

spring.cloud.gateway.routes[4].id=purchase-microservice
spring.cloud.gateway.routes[4].uri=lb://PURCHASE-MICROSERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/purchase/**

spring.cloud.gateway.default-filters=TokenRelay
spring.main.allow-bean-definition-overriding=true

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/mycompany-microservice-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=48GpCUBDisrHCHUDZ4XHG0boTvrgerBh
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-cloud-gateway-client